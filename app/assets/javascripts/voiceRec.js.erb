// Global Vars

var accessToken = "<%= ENV['API_KEY'] %>"
var baseUrl = "https://api.api.ai/v1/",
    $speechInput,
    $recBtn,
    recognition,
    messageRecording = "Recording...",
    messageCouldntHear = "I couldn't hear you, could you say that again?",
    messageInternalError = "Oh no, there has been an internal server error",
    record = 0,
    title = 0,
    desc = 0,
    messageSorry = "I'm sorry, I don't have the answer to that yet.";

$(document).ready(function() {
  $speechInput = $("#speech");
  $recBtn = $("#rec");
  $formTitle = $(".some-form");
  $formDesc = $('.desc-val');

  $("#menu-toggle").click(function(e) {
      e.preventDefault();
      $("#wrapper").toggleClass(".sidebar-wrapper");
  });

  $speechInput.keypress(function(event) {
          if (event.which == 13) {
            event.preventDefault();
            send();
          }
        });
        //Starts the recording session on click
        $recBtn.on("click", function(event) {
          switchRecognition();
          record = 1;
        });

        $formTitle.on("click", function(event){
          switchRecognition();
          title = 1;
        })

        $formDesc.on('click', function(event){
          switchRecognition();
          desc = 1;
        })

        $(".debug__btn").on("click", function() {
          $(this).next().toggleClass("is-active");
          return false;
        });
      });
      function startRecognition() {
        recognition = new webkitSpeechRecognition();
        recognition.continuous = false;
        recognition.interimResults = false;
        recognition.onstart = function(event) {
          respond(messageRecording);
          updateRec();
        };
        recognition.onresult = function(event) {
          recognition.onend = null;

          var text = "";
            for (var i = event.resultIndex; i < event.results.length; ++i) {
              text += event.results[i][0].transcript;
            }

          setInput(text);
          stopRecognition();
        };
        recognition.onend = function() {
          respond(messageCouldntHear);
          stopRecognition();
        };
        recognition.lang = "en-US";
        recognition.start();
      }
      //stops recognition if it recognizes voice
      function stopRecognition() {
        if (recognition) {
          recognition.stop();
          recognition = null;
        }
        updateRec();
      }
      function switchRecognition() {
        if (recognition) {
          stopRecognition();
        } else {
          startRecognition();
        }
      }
      function setInput(text) {
        $speechInput.val(text);
        send();
      }
      function updateRec() {
        $recBtn.text(recognition ? "Stop" : "Speak");
      }

      // Captures the phrase you say and sends it back as JSON data
      function send() {
        var text = $speechInput.val();
        $.ajax({
          type: "POST",
          url: baseUrl + "query",
          contentType: "application/json; charset=utf-8",
          dataType: "json",
          headers: {
            "Authorization": "Bearer " + accessToken
          },
          data: JSON.stringify({query: text, lang: "en", sessionId: "6c968de0-dbae-44b0-ac5e-14f9cfc18130"}),
          success: function(data) {
            prepareResponse(data);
          },
          error: function() {
            respond(messageInternalError);
          }
        });
      }

      //Captures voice JSON data and turns it into a string
      function prepareResponse(val) {
        var dataJSON = JSON.stringify(val, undefined, 2),
        spokenResponse = val.result.speech;
        respond(spokenResponse);
        debugRespond(dataJSON);

        // if (record == 1) {
          record = 0;
          callAction(dataJSON);
        // }
        // if (title == 1) {
        //   title = 0;
        //   console.log(title)
        //   console.log("title");
        //   $speechInput.val("");
        //   submitTitle(dataJSON);
        // }
        // if (desc == 1) {
        //   desc = 0;
        //   console.log(desc)
        //   console.log("desc");
        //   $speechInput.val("");
        //   submitDesc(dataJSON);
        // }
      }

      //Gets the route according to user voice
      function callAction(val){
        json = JSON.parse(val);
        action = json.result.action;
        url = '/';
        if (action == "navigate_shortcuts"){
          url = '/shortcuts';
        } else if (action == "navigate_home"){
          url = '/';
        } else if (action == "navigate_about"){
          url = '/about';
        } else if(action == "ken"){
          url = '/ken'
        } else {
          console.log("ERROR");
        }
        $.ajax({
          url: url,
          method: 'GET'
        }).done(function(response){
          $('.content').html(response);
        })
      }

      //Submit to Title row
      function submitTitle(val){
        json = JSON.parse(val);
        query = json.result.resolvedQuery;
        console.log(query, "title")
        $('.title-val').val(query);
      }

      //Submit to Description row
      function submitDesc(val){
        json = JSON.parse(val);
        query = json.result.resolvedQuery;
        console.log(query, "desc")
        $('.desc-val').val(query);
      }

      //responds with JSON DATA
      function debugRespond(val) {
        $("#response").text(val);
      }

      //AI Response to the user
      function respond(val) {
        if (val == "") {
          val = messageSorry;
        }
        if (val !== messageRecording) {
          var msg = new SpeechSynthesisUtterance();
          msg.voiceURI = "native";
          msg.text = val;
          msg.lang = "en-US";
          window.speechSynthesis.speak(msg);

        }

        //Appends Data into JSON table
        $("#spokenResponse").addClass("is-active").find(".spoken-response__text").html(val);
      }
